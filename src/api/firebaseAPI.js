import * as firebase from "firebase/app";
import "firebase/database";

export class FirebaseAPI {
  constructor() {
    this.users = [];
  }

  createUser(user) {
    firebase.database().ref('users/').push({
      firstName: user.firstName,
      lastName: user.lastName,
      phone: user.phone,
      email: user.email
    });
  }

  updateUser(id, update) {
    // Replaces existing user data in FBDB
  }

  // TODO: Need to figure out way to get ahold of the correct id
  // that wil be passed in here for deletion.
  deleteUser(id) {
    firebase.database().ref('users/', id).remove();
  }

  // TODO: somewhat working, deletes all data from FBDB
  // But once component is connected, causes error when 
  // getAllUsers() tries to pull data into state on load/ connect.
  deleteAllUsers() {
    firebase.database().ref('/').remove();
  }

  getAllUsers() {
    const database = firebase.database();
    const ref= database.ref('users');
    ref.on('value', this.getData.bind(this));
    return this.users;
  }

  getData(data) {
    const firebaseData = data.val();
    const keys = Object.keys(firebaseData);
    const userObj = [];    
    for(let i = 0; i < keys.length; i++) {
      let key = keys[i];
      let user = firebaseData[key];
      userObj.push(user);
    }
    this.users = userObj;
  }

  // TODO: Need to figure out how to reference the user
  // in the FBDB since ids are auto generated by FB.
  getUser() {
    
  }
}